<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<!--Очередность в "log4j:configuration" должна быть такой
"(renderer*,throwableRenderer?,appender*,plugin*,(category|logger)*,root?,(categoryFactory|loggerFactory)?"-->
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <param name="Target" value="System.out"/>
        <!--        <param name="threshold" value="debug"/>-->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"
                   value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %m%n"/>
            <!--         value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %c:%M:%L - %m%n"/>-->
            <!--         value=""%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] - [%-13.13thread]  %-37.37logger{36} :%M:%L - %m%n""/>-->
        </layout>
    </appender>
    <appender name="fileAppender" class="org.apache.log4j.RollingFileAppender">
        <param name="maxFileSize" value="10MB"/>
        <param name="maxBackupIndex" value="2"/>
        <param name="file" value="logging/logfile_usageLog.txt"/>
        <param name="immediateFlush" value="true"/>
        <!--        <param name="threshold" value="trace"/>-->
        <param name="append" value="true"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"
                   value="%d{yyyy-MM-dd HH:mm:ss} [%-5p] %c{1} - %m%n"/>
        </layout>
    </appender>
    <appender name="fileAppender2" class="org.apache.log4j.RollingFileAppender">
        <param name="maxFileSize" value="5MB"/>
        <param name="maxBackupIndex" value="2"/>
        <param name="file" value="logging/logfile.txt"/>
        <param name="immediateFlush" value="true"/>
        <!--        <param name="threshold" value="trace"/>-->
        <param name="append" value="true"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"
                   value="%d{yyyy-MM-dd HH:mm:ss} [%-5p] %c{1} - %m%n"/>
        </layout>
    </appender>
    <appender name="fileDownloadAppender" class="org.apache.log4j.RollingFileAppender">
        <param name="maxFileSize" value="5MB"/>
        <param name="maxBackupIndex" value="2"/>
        <param name="file" value="logging/logfile_download_file.txt"/>
        <param name="immediateFlush" value="true"/>
        <!--        <param name="threshold" value="trace"/>-->
        <param name="append" value="true"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"
                   value="%d{yyyy-MM-dd HH:mm:ss} [%-5p] %c:%M:%L - %m%n"/>
        </layout>
    </appender>
    <appender name="fileAppender3" class="org.apache.log4j.RollingFileAppender">
        <param name="maxFileSize" value="5MB"/>
        <param name="maxBackupIndex" value="2"/>
        <param name="file" value="logging/logfile_general.txt"/>
        <param name="immediateFlush" value="true"/>
        <!--        <param name="threshold" value="trace"/>-->
        <param name="append" value="true"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"
                   value="%d{yyyy-MM-dd HH:mm:ss} [%-5p] %c:%M:%L - %m%n"/>
        </layout>
    </appender>

    <logger name="ru.job4j.downloader.UsageLog4j" additivity="false">
        <level value="info"/>
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="console"/>
    </logger>

    <logger name="ru.job4j.downloader" additivity="false">
        <level value="info"/>
        <appender-ref ref="fileAppender2"/>
        <appender-ref ref="console"/>
    </logger>

<!--    <logger name="ru.job4j.filedownload.FileDownload" additivity="false">-->
    <logger name="ru.job4j.filedownload" additivity="false">
        <level value="info"/>
        <appender-ref ref="fileDownloadAppender"/>
        <appender-ref ref="console"/>
    </logger>

    <logger name="ru.job4j" additivity="false">
        <level value="info"/>
        <appender-ref ref="fileAppender3"/>
        <appender-ref ref="console"/>
    </logger>

    <root>
        <priority value="info"/>
        <appender-ref ref="console"/>
    </root>

</log4j:configuration>


        <!--
        #log4j.properties и log4j.xml могут использоваться для настройки логирования в Java с помощью Log4j.
        #Выбор приоритетного файла зависит от конкретной ситуации и предпочтений разработчика.
        #В общем случае, log4j.xml обычно предпочтительнее, так как в нем более гибкий и мощный синтаксис, позволяющий
        #более тонко настраивать параметры логирования. Однако, если настройки логирования не очень сложные и не требуют
        #частых изменений, то log4j.properties может быть более удобным вариантом.
        #Кроме того, можно использовать и log4j.xml, и log4j.properties одновременно, причем log4j.xml будет иметь больший
        #приоритет. То есть, если один и тот же параметр задан и в log4j.xml, и в log4j.properties, то будет использовано
        #значение из log4j.xml.
        ### Формат записи.
        # В логах удобно получать информацию о времени выполнении,
        # классе и строчке кода, где была сделана запись.
        # %d{ISO8601} - дата в формате ISO8601.
        # %-5p - уровень сообщения, приоритет. 5 символов. Выравнивание влево.
        # %-t - имя потока. Выравнивание влево.
        # %c - категория. Класс.
        # %c:%M:%L - класс, метод, строчка.
        # %m%n - текс сообщения (%m - сообщение после, которого идет перенос строки %n).
        # [ ] - квадратные скобки улучшают читабельность.
        log4j.appender.console.layout=org.apache.log4j.PatternLayout
        log4j.appender.console.layout.ConversionPattern=%d{ISO8601} [%-5p] [%c:%M:%L] - %m%n
        #log4j.appender.console.layout.ConversionPattern=%d{ISO8601} [%-5p] [%-t] [%32.32c] %c:%M:%L - %m%n

        # Приоритетность: all, trace, debug, info, warn, error, fatal

        # У logger атрибут additivity=»false» означает, что все сообщения
         обрабатываются только этим логгером, иначе сообщения будут обрабатываться
         и logger и root. Это приведёт к удвоению сообщений, что скорее всего
         не входит в ваши планы.

        # appender,logger,root элементы должны идти именно в таком порядке,
         иначе log4j будет выдавать:
         log4j:WARN The content of element type «logger» must match
         «(param*,level?,appender-ref*)».

        -->
package nestedclasses.anonymosclasses.example2;

/**
 * пример вложенных классов
 * этом примере есть несколько типов вложенных и внутренних классов.
 * Вложенный класс, не объявленный статическим, называется внутренним классом.
 * В данном коде B является вложенным классом,
 * а C - вложенным и внутренним классом.
 * Анонимный класс является подклассом существующего класса
 * (в примере Base) или реализации интерфейса.
 * Основная особенность - анонимный класс не имеет имени.
 * Поскольку анонимный класс не имеет имени, он не может иметь явный конструктор.
 * Также к анонимному классу невозможно обратиться извне объявляющего его выражения,
 * за исключением неявного обращения посредством объектной ссылки на суперкласс
 * или интерфейс. Анонимные классы никогда не могут быть статическими, либо абстрактными,
 * и всегда являются конечными классами.
 * Кроме того, каждое объявление анонимного класса уникально.
 * Каждый анонимный класс объявляется внутри выражения.
 */
public class Base {
    void method1() {
    }

    void method2() {
    }
}

class A { //нормальный класс
    static class B { //статический вложенный класс
    }

    class C { //внутренний класс (Вложенный класс, не объявленный статическим,
        //называется внутренним классом.)
    }

    void f() {
        class D { //локальный класс
        }
    }

    void g() {
        //анонимный класс
        Base bref1 = new Base() {
            void method1() {
            }
        };
        //второй анонимный класс
        Base bref2 = new Base() {
            void method1() {
            }
        };
    }
}

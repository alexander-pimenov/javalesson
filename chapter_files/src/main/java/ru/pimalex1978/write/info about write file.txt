https://javadevblog.com/kak-zapisat-v-fajl-na-java-primery-s-filewriter-bufferedwriter-files-i-fileoutputstream.html

Java предоставляет множество способов записи данных файл, поэтому
сегодня мы рассмотрим на примере наиболее популярные способы.
Как записать в файл. Теория.

FileWriter — это самый простой способ записать информацию в
файл. Он предоставляет перегруженный метод write() для записи
int, байтового массива и String в файл. FileWriter отлично
подходит для записи небольших объемов данных.

BufferedWriter — почти аналогичен FileWriter, но использует
внутри себя буфер для записи данных в файл. Если вам нужно
записать в файл большие объемы информации, то ваш выбор должен
пасть на BufferedWriter.
FileWriter и BufferedWriter хорошо справляются с записью
текстовой информации в файл, но когда стоит задача записывать
в файл данные потока, то желательно использовать FileOutputStream.

Files — вспомогательный класс для работы с файлами. Он содержит
метод, который внутри себя использует OutputStream для  записи
массива байтов в файл.

Далее приведена программа для записи информации в файл с помощью
классов FileWriter, BufferedWriter, FileOutputStream и Files.

В результате работы программы были созданы автоматически 4 текстовых файла
в папке c:/test/ и в них записадась информация. Посмотри различия. Они есть!

Еще обратите внимание, что в методе записи в файл с помощью BufferedWriter
мы использовали разделитель пути файла "line.separator".
Вот немного о них:

Класс java.io.File содержит четыре разделителя пути файла.
Сегодня мы узнаем зачем они нужны и как использовать эти
разделители.
Немного теории по каждом разделителе пути файла.
Переменная File separator — платформозависимый символ, который
используется для разделения каталогов на пути к файлу.
Например, для Windows это '\', а для UNIX это '/'.
Переменная separatorChar — тот же в разделитель, но представляет
собой символ char.
Переменная pathSeparator: платформозависимая переменная, которая
используется в PATH или CLASSPATH. Представляет собой разделитель
':' в Unix системах и ';' в системе Windows.
Переменная pathSeparatorChar: то же самое, что и pathSeparator,
но является символом char.

Для того, чтобы наша программа была платформонезависимой, мы
должны всегда использовать эти разделители для создания пути к
файлу.

//платформонезависимый и безопасный подход создания пути к файлу как в Unix, так и в Windows
File fileSafe = new File("tmp"+File.separator+"filename.txt")
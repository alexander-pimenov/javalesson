https://introcs.cs.princeton.edu/java/23recursion/TowersOfHanoi.java.html
Задача по перекладыванию пирамиды из дисков разного диаметра
с одного стержня на другой.
Задача решена рекурсивно!!! Рекурсия подходит здесь как нельзя лучше.
Не рекурсивное решение трудное.
Нельзя диск большего диаметра класть поверх диска с меньшим
диаметром.

Идея создать функцию, которая перемещаем заданное количество дисков 'n',
со стержня номер 'a'(start) на стержень с номером 'b'(finish)

move(n, a, b);
move(n, start, finish);

Для примера
move(2, 1, 3) - т.е. два диска с первого стержня на стержень с номером 3.
№ диска     № стержня откуда      № стержня куда
    1               1                   2
    2               1                   3
    1               2                   3

Нужно также уметь определять номер промежуточного стержня.
Т.к. всего три стержня и сумма их всегда рана 6: 1+2+3=6
И номера стержней можно назвать так: start + tmp + finish = 6
То он вычисляется по формуле:
tmp = 6 - start - finish

Ниже приведено объянение для языка Python:
Ханойская башня 1:03:04:
https://www.youtube.com/watch?v=6AW94BcSo4o

def move(n, start, finish){
if (n==1)
print(n, start, finish);
}else{
tmp=6-start-finish;
move(n-1, start, tmp);
print(n, start, finish);
move(n-1, tmp, finish);}
